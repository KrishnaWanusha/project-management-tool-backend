name: Build and Deploy to EC2

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/vortexa-backend:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/vortexa-backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Clean up Docker resources
            docker system prune -af || true
            rm -rf ~/.cache/pip || true

            PORT=8000

            # More thorough port cleanup
            # Check for any process using port 8000 (including Docker containers)
            sudo lsof -i :$PORT | awk 'NR!=1 {print $2}' | xargs -r sudo kill -9 || true

            # Stop and remove the container if it exists
            docker stop vortexa-backend || true
            docker rm vortexa-backend || true

            # Additional check to ensure no Docker container is using the port
            docker ps -q --filter publish=$PORT | xargs -r docker stop || true

            # Wait a moment for the port to be fully released
            sleep 5

            # Pull the latest image
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/vortexa-backend:latest

            # Create environment file
            echo "PORT=4000" > .env
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" >> .env
            echo "ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
            echo "REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
            echo "GITHUB_AUTH=${{ secrets.GITHUB_AUTH }}" >> .env
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env

            # Run the container with automatic restart
            docker run -d --restart unless-stopped --env-file .env --name vortexa-backend -p $PORT:$PORT ${{ secrets.DOCKERHUB_USERNAME }}/vortexa-backend:latest
